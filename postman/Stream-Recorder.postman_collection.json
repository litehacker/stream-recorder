{
  "info": {
    "_postman_id": "1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p",
    "name": "Stream Recorder API",
    "description": "Collection for testing Stream Recorder endpoints with cookie-based authentication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health & Metrics",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "Get Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/metrics",
              "host": ["{{base_url}}"],
              "path": ["metrics"]
            }
          }
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Generate Credentials",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/credentials",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "credentials"]
            }
          }
        }
      ]
    },
    {
      "name": "Rooms",
      "item": [
        {
          "name": "List Rooms",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/rooms",
              "host": ["{{base_url}}"],
              "path": ["api", "rooms"]
            }
          }
        },
        {
          "name": "Create Room",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Room\",\n  \"max_participants\": 10,\n  \"recording_enabled\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/rooms",
              "host": ["{{base_url}}"],
              "path": ["api", "rooms"]
            }
          }
        },
        {
          "name": "List Room Recordings",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/rooms/:id/recordings",
              "host": ["{{base_url}}"],
              "path": ["api", "rooms", ":id", "recordings"],
              "variable": [
                {
                  "key": "id",
                  "value": "ROOM_ID",
                  "description": "Replace with actual room ID"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "WebSocket",
      "item": [
        {
          "name": "Connect to Room",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Upgrade",
                "value": "websocket",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/rooms/:id/ws",
              "host": ["{{base_url}}"],
              "path": ["api", "rooms", ":id", "ws"],
              "variable": [
                {
                  "key": "id",
                  "value": "ROOM_ID",
                  "description": "Replace with actual room ID"
                }
              ]
            }
          }
        }
      ]
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "value": "",
        "type": "string"
      },
      {
        "key": "key",
        "value": "Authorization",
        "type": "string"
      },
      {
        "key": "in",
        "value": "header",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Automatically include Bearer prefix for Authorization header",
          "if (pm.request.headers.has('Authorization')) {",
          "    const authHeader = pm.request.headers.get('Authorization');",
          "    if (!authHeader.startsWith('Bearer ')) {",
          "        pm.request.headers.upsert({",
          "            key: 'Authorization',",
          "            value: 'Bearer ' + authHeader",
          "        });",
          "    }",
          "}"
        ]
      }
    }
  ]
}
